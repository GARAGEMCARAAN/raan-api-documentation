openapi: 3.0.0
info:
  version: 0.7.0
  title: RAAN API
  contact:
    name: raan-software@garagemca.org
    email: raan-software@garagemca.org

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    File:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - file
              id:
                type: string
              attributes:
                type: object
                properties:
                  cover:
                    type: boolean
              relationships:
                type: object
                properties:
                  file_access_level:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
    ObjectWithId:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - file
              id:
                type: string

security:
  - {}
  - bearerAuth: []

tags:
  - name: search
  - name: person
  - name: event
  - name: document
  - name: organisation
  - name: collection
  - name: keyword
  - name: place
  - name: kind
  - name: role
  - name: language
  - name: series
  - name: subject_heading
  - name: file

paths:
  /search:
    get:
      tags:
        - search
      summary: Returns search results
      operationId: getSearchResults
      parameters:
        - name: page[size]
          in: query
          required: false
          schema:
            type: integer
            default: 50
        - name: page[number]
          in: query
          required: false
          schema:
            type: integer
        - name: search[query]
          in: query
          required: false
          description: Search query
          schema:
            type: string
        - name: filter[kind][prefix]
          in: query
          required: false
          description: Filtration by kind. Call /kind to get more values.
          schema:
            type: string
            enum:
              - person
              - person.individual
              - person.group
              - event
              - event.exhibition.solo
              - event.exhibition.collective
              - document
              - document.archive_document
              - document.audio
              - document.book
              - document.book.catalogue
              - organisation

        - name: sort
          in: query
          required: false
          description: Sorting
          schema:
            type: string
            enum:
              - name
              - name_en
              - lastname
              - firstname
              - date_from
              - date_to
              - place.name
              - place_of_death.name
              - bio
              - gnd
              - inv_int
              - created_at
      responses:
        "200":
          description: successful operation

  /person:
    get:
      tags:
        - person
      summary: Returns list of persons
      operationId: getPersonList
      parameters:
        - name: page[size]
          in: query
          required: false
          schema:
            type: integer
            default: 50
        - name: page[number]
          in: query
          required: false
          schema:
            type: integer
        - name: filter[kind][prefix]
          in: query
          required: false
          description: Filtration by kind
          schema:
            type: string
            enum:
              - person.individual
              - person.group
        - name: filter[name][infix]
          in: query
          required: false
          description: Lookup by name
          schema:
            type: string
      responses:
        "200":
          description: successful operation
  "/person/{id}":
    get:
      tags:
        - person
      description: Returns person based on ID
      summary: Find person by UUID
      operationId: getPersonById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
  /event:
    get:
      tags:
        - event
      summary: Returns list of events
      operationId: getEventList
      parameters:
        - name: page[size]
          in: query
          required: false
          schema:
            type: integer
            default: 50
        - name: page[number]
          in: query
          required: false
          schema:
            type: integer
        - name: filter[name][infix]
          in: query
          required: false
          description: Lookup by name and name_en
          schema:
            type: string
      responses:
        "200":
          description: successful operation
  "/event/{id}":
    get:
      tags:
        - event
      description: Returns event based on ID
      summary: Find event by UUID
      operationId: getEventById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
  /document:
    get:
      tags:
        - document
      summary: Returns list of documents
      operationId: getdocumentList
      parameters:
        - name: page[size]
          in: query
          required: false
          schema:
            type: integer
            default: 50
        - name: page[number]
          in: query
          required: false
          schema:
            type: integer
        - name: filter[kind][prefix]
          in: query
          required: false
          description: Filtration by kind
          schema:
            type: string
            enum:
              - document.article
              - document.book
              - document.periodical
              - document.issue
              - document.image
              - document.ephemeris
              - document.media_item
              - document.video
              - document.audio
              - document.archive_document
              - document.thing
        - name: filter[name][infix]
          in: query
          required: false
          description: Lookup by name and name_en
          schema:
            type: string
      responses:
        "200":
          description: successful operation
  "/document/{id}":
    get:
      tags:
        - document
      description: Returns document based on ID
      summary: Find document by UUID
      operationId: getdocumentById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
  /organisation:
    get:
      tags:
        - organisation
      summary: Returns list of organisations
      operationId: getorganisationList
      parameters:
        - name: page[size]
          in: query
          required: false
          schema:
            type: integer
            default: 50
        - name: page[number]
          in: query
          required: false
          schema:
            type: integer
        - name: filter[name][infix]
          in: query
          required: false
          description: Lookup by name and name_en
          schema:
            type: string
      responses:
        "200":
          description: successful operation
  "/organisation/{id}":
    get:
      tags:
        - organisation
      description: Returns organisation based on ID
      summary: Find organisation by UUID
      operationId: getorganisationById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
  /keyword:
    get:
      tags:
        - keyword
      summary: Returns list of keywords
      operationId: getKeywordList
      parameters:
        - name: page[size]
          in: query
          required: false
          schema:
            type: integer
            default: 50
        - name: page[number]
          in: query
          required: false
          schema:
            type: integer
        - name: filter[name][infix]
          in: query
          required: false
          description: Lookup by name and name_en
          schema:
            type: string
      responses:
        "200":
          description: successful operation
  /role:
    get:
      tags:
        - role
      summary: Returns list of roles
      operationId: getRoleList
      parameters:
        - name: page[size]
          in: query
          required: false
          schema:
            type: integer
            default: 50
        - name: page[number]
          in: query
          required: false
          schema:
            type: integer
        - name: filter[type]
          in: query
          required: false
          description: Lookup by types
          schema:
            type: string
        - name: filter[name][infix]
          in: query
          required: false
          description: Lookup by name and name_en
          schema:
            type: string
      responses:
        "200":
          description: successful operation
  /kind:
    get:
      tags:
        - kind
      summary: Returns list of kinds
      operationId: getKindList
      parameters:
        - name: page[size]
          in: query
          required: false
          schema:
            type: integer
            default: 50
        - name: page[number]
          in: query
          required: false
          schema:
            type: integer
        - name: filter[name][infix]
          in: query
          required: false
          description: Lookup by name and name_en
          schema:
            type: string
        - name: filter[id][prefix]
          in: query
          required: false
          schema:
            type: string
            enum:
              - event
              - event.exhibition
              - name
              - document
              - document.book
              - document.archive_document
      responses:
        "200":
          description: successful operation
  /language:
    get:
      tags:
        - language
      summary: Returns list of languages
      operationId: getLanguageList
      parameters:
        - name: page[size]
          in: query
          required: false
          schema:
            type: integer
            default: 50
        - name: page[number]
          in: query
          required: false
          schema:
            type: integer
        - name: filter[name][infix]
          in: query
          required: false
          description: Lookup by name and name_en
          schema:
            type: string
      responses:
        "200":
          description: successful operation
  /series:
    get:
      tags:
        - series
      summary: Returns list of book series
      operationId: getSeriesList
      parameters:
        - name: page[size]
          in: query
          required: false
          schema:
            type: integer
            default: 50
        - name: page[number]
          in: query
          required: false
          schema:
            type: integer
        - name: filter[name][infix]
          in: query
          required: false
          description: Lookup by name and name_en
          schema:
            type: string
      responses:
        "200":
          description: successful operation
  /subject_heading:
    get:
      tags:
        - subject_heading
      summary: Returns list of subject headings
      operationId: getSubjectHeadingList
      parameters:
        - name: page[size]
          in: query
          required: false
          schema:
            type: integer
            default: 50
        - name: page[number]
          in: query
          required: false
          schema:
            type: integer
        - name: filter[name][infix]
          in: query
          required: false
          description: Lookup by name and name_en
          schema:
            type: string
      responses:
        "200":
          description: successful operation
  /place:
    get:
      tags:
        - place
      summary: Returns list of places
      operationId: getPlaceList
      parameters:
        - name: page[size]
          in: query
          required: false
          schema:
            type: integer
            default: 50
        - name: page[number]
          in: query
          required: false
          schema:
            type: integer
        - name: filter[name][infix]
          in: query
          required: false
          description: Lookup by name and name_en
          schema:
            type: string
      responses:
        "200":
          description: successful operation
  /collection:
    get:
      tags:
        - collection
      summary: Returns list of collections
      operationId: getCollectionList
      parameters:
        - name: page[size]
          in: query
          required: false
          schema:
            type: integer
            default: 50
        - name: page[number]
          in: query
          required: false
          schema:
            type: integer
        - name: filter[name][infix]
          in: query
          required: false
          description: Lookup by name and name_en
          schema:
            type: string
      responses:
        "200":
          description: successful operation
  /file:
    patch:
      tags:
        - file
      security:
        - bearerAuth: []
      summary: Update group of files
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
              
      responses:
        "204":
          description: successful operation
    delete:
      tags:
        - file
      security:
        - bearerAuth: []
      summary: Delete group of files
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectWithId'
              
      responses:
        "204":
          description: successful operation

servers:
  - url: https://api.raan.garagemca.org/
  - url: https://dev.api.raan.garagemca.org/
